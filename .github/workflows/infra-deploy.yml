name: "Terraform Infrastructure plan and apply"
run-name: ${{ github.actor }} / infra plan and apply ðŸš€

on: workflow_dispatch

env:
  # verbosity setting for Terraform logs
  TF_LOG: INFO
  # Credentials for deployment to AWS
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TFSTATE_S3_BUCKET: ${{ vars.TFSTATE_S3_BUCKET }}
  TFSTATE_S3_KEY: ${{ vars.TFSTATE_S3_KEY }}
  TFSTATE_DYNAMODB_TABLE: ${{ vars.TFSTATE_DYNAMODB_TABLE }}

  TF_VAR_account_id: ${{ secrets.AWS_ACCOUNT_ID }}
  TF_VAR_db_password: ${{ secrets.DB_MASTER_PASSWORD }}

jobs:
  terraform:
    name: "Terraform Infrastructure Change Management"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        # We keep Terraform files in the terraform directory.
        working-directory: ./.terraform-iac
    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v4

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6

      - name: Terraform init
        id: init
        run: terraform init -backend-config=bucket=$TFSTATE_S3_BUCKET -backend-config=key=$TFSTATE_S3_KEY -backend-config=dynamodb_table=$TFSTATE_DYNAMODB_TABLE


      - name: Terraform format
        id: fmt
        run: terraform fmt -check

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -input=false

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false

